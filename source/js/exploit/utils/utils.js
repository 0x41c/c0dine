function printf(message, status = 1) {
  let prefixes = ["-", "*", "+"];
  port.postMessage(`[${prefixes[status]}] ${message}`);
}

// Trigger GC
function gc(n = 10000) {
  let tmp = [];
  for (var i = 0; i < n; i++) tmp.push(new Uint8Array(10000));
}

function calculateChunkCount(length) {
  let chunks = 0;
  let total = 8;
  while (total < length) {
    total += 8;
  }
  chunks = total / 8;
  return chunks;
}

function compileFunction() {
  function compiledFunction(num) {
    for (var i = 2; i < num; i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return true;
  }

  for (var i = 0; i < 1000; i++) {
    compiledFunction(i);
  }
  for (var i = 0; i < 1000; i++) {
    compiledFunction(i);
  }

  return compiledFunction;
}

function printRawAssembly(mem) {
  let del = "-".repeat(10);
  let val = `${del} Shellcode start ${del}\n`;
  val += String.fromCharCode(...mem);
  printf(val);
  printf(`${del} Shellcode end ${del}`);
}

function printHexDump(data) {
  let del = "-".repeat(10);
  printf(`${del} Hex Dump Start ${del}\n${hexdump(data)}`);
  printf(`${del} Hex Dump End ${del}`);
}
